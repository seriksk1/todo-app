{"ast":null,"code":"import axios from \"axios\";\nimport { getSortedTasks, getUpdatedStatus } from \"./sorting\";\nimport { addTaskSuccess, removeTaskSuccess, setTaskStatusSuccess, setTasks } from \"./tasks\";\nconst api = axios.create({\n  baseURL: `http://localhost:3001/api`\n});\nexport const addTask = item => dispatch => {\n  api.post(\"/task\", item).then(res => {\n    dispatch(addTaskSuccess(res.data.item));\n  }).catch(err => console.log(err));\n};\nexport const removeTask = id => dispatch => {\n  dispatch(removeTaskSuccess(id));\n  api.delete(`/task/${id}`).then(res => {\n    console.log(res);\n  }).catch(err => console.log(err));\n};\nexport const setTaskStatus = item => dispatch => {\n  const updatedStatus = getUpdatedStatus(item);\n  api.patch(`/task/${item._id}`, {\n    status: updatedStatus\n  }).then(res => {\n    dispatch(setTaskStatusSuccess(res.data.item));\n  }).catch(err => console.log(err));\n};\nexport const fetchTasks = sortType => dispatch => {\n  api.get(\"/tasks\").then(({\n    data\n  }) => {\n    const items = data.data;\n    dispatch(setTasks(getSortedTasks(items, sortType)));\n  }).catch(err => {\n    dispatch(setTasks([]));\n  });\n};","map":{"version":3,"sources":["/home/developer/Public/Projects/todo-app/client/src/redux/actions/queries.js"],"names":["axios","getSortedTasks","getUpdatedStatus","addTaskSuccess","removeTaskSuccess","setTaskStatusSuccess","setTasks","api","create","baseURL","addTask","item","dispatch","post","then","res","data","catch","err","console","log","removeTask","id","delete","setTaskStatus","updatedStatus","patch","_id","status","fetchTasks","sortType","get","items"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,WAAjD;AACA,SACEC,cADF,EAEEC,iBAFF,EAGEC,oBAHF,EAIEC,QAJF,QAKO,SALP;AAOA,MAAMC,GAAG,GAAGP,KAAK,CAACQ,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAG;AADa,CAAb,CAAZ;AAIA,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAWC,QAAD,IAAc;AAC7CL,EAAAA,GAAG,CACAM,IADH,CACQ,OADR,EACiBF,IADjB,EAEGG,IAFH,CAESC,GAAD,IAAS;AACbH,IAAAA,QAAQ,CAACT,cAAc,CAACY,GAAG,CAACC,IAAJ,CAASL,IAAV,CAAf,CAAR;AACD,GAJH,EAKGM,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;AAMD,CAPM;AASP,OAAO,MAAMG,UAAU,GAAIC,EAAD,IAASV,QAAD,IAAc;AAC9CA,EAAAA,QAAQ,CAACR,iBAAiB,CAACkB,EAAD,CAAlB,CAAR;AACAf,EAAAA,GAAG,CACAgB,MADH,CACW,SAAQD,EAAG,EADtB,EAEGR,IAFH,CAESC,GAAD,IAAS;AACbI,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACD,GAJH,EAKGE,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;AAMD,CARM;AAUP,OAAO,MAAMM,aAAa,GAAIb,IAAD,IAAWC,QAAD,IAAc;AACnD,QAAMa,aAAa,GAAGvB,gBAAgB,CAACS,IAAD,CAAtC;AAEAJ,EAAAA,GAAG,CACAmB,KADH,CACU,SAAQf,IAAI,CAACgB,GAAI,EAD3B,EAC8B;AAAEC,IAAAA,MAAM,EAAEH;AAAV,GAD9B,EAEGX,IAFH,CAESC,GAAD,IAAS;AACbH,IAAAA,QAAQ,CAACP,oBAAoB,CAACU,GAAG,CAACC,IAAJ,CAASL,IAAV,CAArB,CAAR;AACD,GAJH,EAKGM,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;AAMD,CATM;AAWP,OAAO,MAAMW,UAAU,GAAIC,QAAD,IAAelB,QAAD,IAAc;AACpDL,EAAAA,GAAG,CACAwB,GADH,CACO,QADP,EAEGjB,IAFH,CAEQ,CAAC;AAAEE,IAAAA;AAAF,GAAD,KAAc;AAClB,UAAMgB,KAAK,GAAGhB,IAAI,CAACA,IAAnB;AACAJ,IAAAA,QAAQ,CAACN,QAAQ,CAACL,cAAc,CAAC+B,KAAD,EAAQF,QAAR,CAAf,CAAT,CAAR;AACD,GALH,EAMGb,KANH,CAMUC,GAAD,IAAS;AACdN,IAAAA,QAAQ,CAACN,QAAQ,CAAC,EAAD,CAAT,CAAR;AACD,GARH;AASD,CAVM","sourcesContent":["import axios from \"axios\";\n\nimport { getSortedTasks, getUpdatedStatus } from \"./sorting\";\nimport {\n  addTaskSuccess,\n  removeTaskSuccess,\n  setTaskStatusSuccess,\n  setTasks,\n} from \"./tasks\";\n\nconst api = axios.create({\n  baseURL: `http://localhost:3001/api`,\n});\n\nexport const addTask = (item) => (dispatch) => {\n  api\n    .post(\"/task\", item)\n    .then((res) => {\n      dispatch(addTaskSuccess(res.data.item));\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const removeTask = (id) => (dispatch) => {\n  dispatch(removeTaskSuccess(id));\n  api\n    .delete(`/task/${id}`)\n    .then((res) => {\n      console.log(res);\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const setTaskStatus = (item) => (dispatch) => {\n  const updatedStatus = getUpdatedStatus(item);\n\n  api\n    .patch(`/task/${item._id}`, { status: updatedStatus })\n    .then((res) => {\n      dispatch(setTaskStatusSuccess(res.data.item));\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const fetchTasks = (sortType) => (dispatch) => {\n  api\n    .get(\"/tasks\")\n    .then(({ data }) => {\n      const items = data.data;\n      dispatch(setTasks(getSortedTasks(items, sortType)));\n    })\n    .catch((err) => {\n      dispatch(setTasks([]));\n    });\n};\n"]},"metadata":{},"sourceType":"module"}