{"ast":null,"code":"import { ACTION } from \"../constants\";\nconst initialState = {\n  items: [],\n  sortType: \"Due-date\"\n};\n\nconst tasks = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION.ADD_TASK:\n      {\n        return { ...state,\n          items: [...state.items, action.payload]\n        };\n      }\n\n    case ACTION.REMOVE_TASK:\n      {\n        const newItems = state.items.filter(({\n          _id\n        }) => _id !== action.payload);\n        return { ...state,\n          items: newItems\n        };\n      }\n\n    case ACTION.SET_TASK_STATUS:\n      {\n        const newItems = [...state.items.filter(({\n          _id\n        }) => _id !== action.payload._id), action.payload];\n        return { ...state,\n          items: newItems\n        };\n      }\n\n    case ACTION.SET_SORT_TYPE:\n      {\n        return { ...state,\n          sortType: action.payload\n        };\n      }\n\n    case ACTION.SET_TASKS:\n      {\n        return { ...state,\n          items: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default tasks;","map":{"version":3,"sources":["/home/developer/Public/Projects/todo-app/client/src/redux/reducers/tasks.js"],"names":["ACTION","initialState","items","sortType","tasks","state","action","type","ADD_TASK","payload","REMOVE_TASK","newItems","filter","_id","SET_TASK_STATUS","SET_SORT_TYPE","SET_TASKS"],"mappings":"AAAA,SAASA,MAAT,QAAuB,cAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAArB;;AAKA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,MAAM,CAACQ,QAAZ;AAAsB;AACpB,eAAO,EACL,GAAGH,KADE;AAELH,UAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiBI,MAAM,CAACG,OAAxB;AAFF,SAAP;AAID;;AACD,SAAKT,MAAM,CAACU,WAAZ;AAAyB;AACvB,cAAMC,QAAQ,GAAGN,KAAK,CAACH,KAAN,CAAYU,MAAZ,CAAmB,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAaA,GAAG,KAAKP,MAAM,CAACG,OAA/C,CAAjB;AAEA,eAAO,EACL,GAAGJ,KADE;AAELH,UAAAA,KAAK,EAAES;AAFF,SAAP;AAID;;AAED,SAAKX,MAAM,CAACc,eAAZ;AAA6B;AAC3B,cAAMH,QAAQ,GAAG,CACf,GAAGN,KAAK,CAACH,KAAN,CAAYU,MAAZ,CAAmB,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAaA,GAAG,KAAKP,MAAM,CAACG,OAAP,CAAeI,GAAvD,CADY,EAEfP,MAAM,CAACG,OAFQ,CAAjB;AAKA,eAAO,EACL,GAAGJ,KADE;AAELH,UAAAA,KAAK,EAAES;AAFF,SAAP;AAID;;AAED,SAAKX,MAAM,CAACe,aAAZ;AAA2B;AACzB,eAAO,EACL,GAAGV,KADE;AAELF,UAAAA,QAAQ,EAAEG,MAAM,CAACG;AAFZ,SAAP;AAID;;AAED,SAAKT,MAAM,CAACgB,SAAZ;AAAuB;AACrB,eAAO,EACL,GAAGX,KADE;AAELH,UAAAA,KAAK,EAAEI,MAAM,CAACG;AAFT,SAAP;AAID;;AAED;AACE,aAAOJ,KAAP;AA3CJ;AA6CD,CA9CD;;AAgDA,eAAeD,KAAf","sourcesContent":["import { ACTION } from \"../constants\";\n\nconst initialState = {\n  items: [],\n  sortType: \"Due-date\",\n};\n\nconst tasks = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION.ADD_TASK: {\n      return {\n        ...state,\n        items: [...state.items, action.payload],\n      };\n    }\n    case ACTION.REMOVE_TASK: {\n      const newItems = state.items.filter(({ _id }) => _id !== action.payload);\n\n      return {\n        ...state,\n        items: newItems,\n      };\n    }\n\n    case ACTION.SET_TASK_STATUS: {\n      const newItems = [\n        ...state.items.filter(({ _id }) => _id !== action.payload._id),\n        action.payload,\n      ];\n\n      return {\n        ...state,\n        items: newItems,\n      };\n    }\n\n    case ACTION.SET_SORT_TYPE: {\n      return {\n        ...state,\n        sortType: action.payload,\n      };\n    }\n\n    case ACTION.SET_TASKS: {\n      return {\n        ...state,\n        items: action.payload,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default tasks;\n"]},"metadata":{},"sourceType":"module"}