{"ast":null,"code":"var _jsxFileName = \"/home/developer/Public/Projects/todo-app/client/src/components/TaskList/TaskListContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport TaskList from \"./TaskList\";\nimport { removeTask, setTaskStatus } from \"../../redux/actions/tasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskListContainer() {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const onRemoveTask = id => {\n    dispatch(removeTask(id));\n  };\n\n  const onChangeTaskStatus = item => {\n    dispatch(setTaskStatus(item));\n  };\n\n  return /*#__PURE__*/_jsxDEV(TaskList, {\n    onRemoveTask: onRemoveTask,\n    onChangeTaskStatus: onChangeTaskStatus\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskListContainer, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", true);\n\n_c = TaskListContainer;\nexport default TaskListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskListContainer\");","map":{"version":3,"sources":["/home/developer/Public/Projects/todo-app/client/src/components/TaskList/TaskListContainer.jsx"],"names":["React","TaskList","removeTask","setTaskStatus","TaskListContainer","dispatch","useDispatch","onRemoveTask","id","onChangeTaskStatus","item"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,2BAA1C;;;AAEA,SAASC,iBAAT,GAA6B;AAAA;;AAC3B,QAAMC,QAAQ,GAAGC,WAAW,EAA5B;;AAEA,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AAC3BH,IAAAA,QAAQ,CAACH,UAAU,CAACM,EAAD,CAAX,CAAR;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAIC,IAAD,IAAU;AACnCL,IAAAA,QAAQ,CAACF,aAAa,CAACO,IAAD,CAAd,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD;AACE,IAAA,YAAY,EAAEH,YADhB;AAEE,IAAA,kBAAkB,EAAEE;AAFtB;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAjBQL,iB;;KAAAA,iB;AAmBT,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\nimport TaskList from \"./TaskList\";\n\nimport { removeTask, setTaskStatus } from \"../../redux/actions/tasks\";\n\nfunction TaskListContainer() {\n  const dispatch = useDispatch();\n\n  const onRemoveTask = (id) => {\n    dispatch(removeTask(id));\n  };\n\n  const onChangeTaskStatus = (item) => {\n    dispatch(setTaskStatus(item));\n  };\n\n  return (\n    <TaskList\n      onRemoveTask={onRemoveTask}\n      onChangeTaskStatus={onChangeTaskStatus}\n    />\n  );\n}\n\nexport default TaskListContainer;\n"]},"metadata":{},"sourceType":"module"}