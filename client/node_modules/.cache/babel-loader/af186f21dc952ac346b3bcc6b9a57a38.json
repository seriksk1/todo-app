{"ast":null,"code":"import { ACTION } from \"../constants\";\nconst initialState = {\n  items: [],\n  sortType: \"Due-date\"\n};\n\nconst tasks = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_SORT_TYPE\":\n      {\n        return { ...state,\n          sortType: action.payload\n        };\n      }\n\n    case \"SET_TASKS\":\n      {\n        return { ...state,\n          items: action.payload\n        };\n      }\n\n    case \"ADD_TASK\":\n      {\n        return { ...state,\n          items: [...state.items, action.payload]\n        };\n      }\n\n    case \"REMOVE_TASK\":\n      {\n        const newItems = state.items.filter(({\n          _id\n        }) => _id !== action.payload);\n        return { ...state,\n          items: newItems\n        };\n      }\n\n    case \"SET_TASK_STATUS\":\n      {\n        const newItems = [...state.items.filter(({\n          _id\n        }) => _id !== action.payload._id), action.payload];\n        return { ...state,\n          items: newItems\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default tasks;","map":{"version":3,"sources":["/home/developer/Public/Projects/todo-app/client/src/redux/reducers/tasks.js"],"names":["ACTION","initialState","items","sortType","tasks","state","action","type","payload","newItems","filter","_id"],"mappings":"AAAA,SAASA,MAAT,QAAuB,cAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAArB;;AAKA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AAAsB;AACpB,eAAO,EACL,GAAGF,KADE;AAELF,UAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFZ,SAAP;AAID;;AAED,SAAK,WAAL;AAAkB;AAChB,eAAO,EACL,GAAGH,KADE;AAELH,UAAAA,KAAK,EAAEI,MAAM,CAACE;AAFT,SAAP;AAID;;AAED,SAAK,UAAL;AAAiB;AACf,eAAO,EACL,GAAGH,KADE;AAELH,UAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiBI,MAAM,CAACE,OAAxB;AAFF,SAAP;AAID;;AACD,SAAK,aAAL;AAAoB;AAClB,cAAMC,QAAQ,GAAGJ,KAAK,CAACH,KAAN,CAAYQ,MAAZ,CAAmB,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAaA,GAAG,KAAKL,MAAM,CAACE,OAA/C,CAAjB;AAEA,eAAO,EACL,GAAGH,KADE;AAELH,UAAAA,KAAK,EAAEO;AAFF,SAAP;AAID;;AAED,SAAK,iBAAL;AAAwB;AACtB,cAAMA,QAAQ,GAAG,CACf,GAAGJ,KAAK,CAACH,KAAN,CAAYQ,MAAZ,CAAmB,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAaA,GAAG,KAAKL,MAAM,CAACE,OAAP,CAAeG,GAAvD,CADY,EAEfL,MAAM,CAACE,OAFQ,CAAjB;AAKA,eAAO,EACL,GAAGH,KADE;AAELH,UAAAA,KAAK,EAAEO;AAFF,SAAP;AAID;;AACD;AACE,aAAOJ,KAAP;AA1CJ;AA4CD,CA7CD;;AA+CA,eAAeD,KAAf","sourcesContent":["import { ACTION } from \"../constants\";\n\nconst initialState = {\n  items: [],\n  sortType: \"Due-date\",\n};\n\nconst tasks = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_SORT_TYPE\": {\n      return {\n        ...state,\n        sortType: action.payload,\n      };\n    }\n\n    case \"SET_TASKS\": {\n      return {\n        ...state,\n        items: action.payload,\n      };\n    }\n\n    case \"ADD_TASK\": {\n      return {\n        ...state,\n        items: [...state.items, action.payload],\n      };\n    }\n    case \"REMOVE_TASK\": {\n      const newItems = state.items.filter(({ _id }) => _id !== action.payload);\n\n      return {\n        ...state,\n        items: newItems,\n      };\n    }\n\n    case \"SET_TASK_STATUS\": {\n      const newItems = [\n        ...state.items.filter(({ _id }) => _id !== action.payload._id),\n        action.payload,\n      ];\n\n      return {\n        ...state,\n        items: newItems,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasks;\n"]},"metadata":{},"sourceType":"module"}