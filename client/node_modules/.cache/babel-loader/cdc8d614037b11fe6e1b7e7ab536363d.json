{"ast":null,"code":"var _jsxFileName = \"/home/developer/Public/Projects/todo-app/client/src/components/TaskList/TaskList.jsx\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport TaskContainer from \"./Task/TaskContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  taskList: {\n    marginTop: 20\n  },\n  warningMessage: {\n    fontSize: \"24px\"\n  }\n});\n\nfunction TaskList({\n  items\n}) {\n  _s();\n\n  const classes = useStyles();\n  return items.length ? /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.taskList,\n    container: true,\n    direction: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    spacing: 3,\n    children: items.map(({\n      _id,\n      task,\n      status,\n      dueDate\n    }) => {\n      return /*#__PURE__*/_jsxDEV(TaskContainer, {\n        id: _id,\n        task: task,\n        status: status,\n        dueDate: dueDate\n      }, `${_id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n    className: classes.modalTitle,\n    children: \"You don't have any tasks yet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/home/developer/Public/Projects/todo-app/client/src/components/TaskList/TaskList.jsx"],"names":["makeStyles","Grid","Typography","TaskContainer","useStyles","taskList","marginTop","warningMessage","fontSize","TaskList","items","classes","length","map","_id","task","status","dueDate","modalTitle"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,0BAA3B;AAEA,SAASC,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAC;AAC3BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE;AADH,GADiB;AAI3BC,EAAAA,cAAc,EAAE;AACdC,IAAAA,QAAQ,EAAE;AADI;AAJW,CAAD,CAA5B;;AASA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA6B;AAAA;;AAC3B,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AAEA,SAAOM,KAAK,CAACE,MAAN,gBACL,QAAC,IAAD;AACE,IAAA,SAAS,EAAED,OAAO,CAACN,QADrB;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,SAAS,EAAC,KAHZ;AAIE,IAAA,cAAc,EAAC,QAJjB;AAKE,IAAA,UAAU,EAAC,QALb;AAME,IAAA,OAAO,EAAE,CANX;AAAA,cAQGK,KAAK,CAACG,GAAN,CAAU,CAAC;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,IAAP;AAAaC,MAAAA,MAAb;AAAqBC,MAAAA;AAArB,KAAD,KAAoC;AAC7C,0BACE,QAAC,aAAD;AACE,QAAA,EAAE,EAAEH,GADN;AAGE,QAAA,IAAI,EAAEC,IAHR;AAIE,QAAA,MAAM,EAAEC,MAJV;AAKE,QAAA,OAAO,EAAEC;AALX,SAEQ,GAAEH,GAAI,EAFd;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVA;AARH;AAAA;AAAA;AAAA;AAAA,UADK,gBAsBL,QAAC,UAAD;AAAY,IAAA,SAAS,EAAEH,OAAO,CAACO,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAtBF;AA0BD;;GA7BQT,Q;UACSL,S;;;KADTK,Q;AA+BT,eAAeA,QAAf","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Grid, Typography } from \"@material-ui/core\";\nimport TaskContainer from \"./Task/TaskContainer\";\n\nconst useStyles = makeStyles({\n  taskList: {\n    marginTop: 20,\n  },\n  warningMessage: {\n    fontSize: \"24px\",\n  },\n});\n\nfunction TaskList({ items }) {\n  const classes = useStyles();\n\n  return items.length ? (\n    <Grid\n      className={classes.taskList}\n      container\n      direction=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      spacing={3}\n    >\n      {items.map(({ _id, task, status, dueDate }) => {\n        return (\n          <TaskContainer\n            id={_id}\n            key={`${_id}`}\n            task={task}\n            status={status}\n            dueDate={dueDate}\n          ></TaskContainer>\n        );\n      })}\n    </Grid>\n  ) : (\n    <Typography className={classes.modalTitle}>\n      You don't have any tasks yet\n    </Typography>\n  );\n}\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}