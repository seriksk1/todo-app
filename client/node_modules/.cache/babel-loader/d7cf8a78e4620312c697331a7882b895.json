{"ast":null,"code":"var _jsxFileName = \"/home/developer/Public/Projects/todo-app/client/src/components/AddTaskForm/AddTaskFormContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport AddTaskForm from \"./AddTaskForm\";\nimport { addTask } from \"../../redux/actions/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddTaskFormContainer({\n  onCloseModal\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isFormValid, setIsFormValid] = useState(false);\n  const [formInput, setFormInput] = useState({\n    status: \"pending\",\n    task: \"\",\n    dueDate: \"\"\n  });\n\n  const onInputChange = e => {\n    const id = e.target.id;\n    const newValue = e.target.value;\n    setFormInput(prev => ({ ...prev,\n      [id]: newValue\n    }));\n  };\n\n  const isInputValid = value => {\n    return value.length >= 3 ? true : value === \"\" ? null : false;\n  };\n\n  const checkFormValidation = obj => {\n    let isValid = Object.values(obj).map(value => isInputValid(value)).every(isValid => isValid);\n    setIsFormValid(isValid);\n  };\n\n  const onAddTask = obj => {\n    dispatch(addTask(obj));\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n\n    if (isFormValid) {\n      onAddTask(formInput);\n      onCloseModal();\n    }\n  };\n\n  useEffect(() => {\n    checkFormValidation(formInput);\n  }, [formInput]);\n  return /*#__PURE__*/_jsxDEV(AddTaskForm, {\n    onCloseModal: onCloseModal,\n    handleAddTask: onAddTask\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n}\n\n_s(AddTaskFormContainer, \"CjePviOkeJLIiLU+pu5dGngWUdU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddTaskFormContainer;\nexport default AddTaskFormContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTaskFormContainer\");","map":{"version":3,"sources":["/home/developer/Public/Projects/todo-app/client/src/components/AddTaskForm/AddTaskFormContainer.jsx"],"names":["React","useState","useEffect","useDispatch","AddTaskForm","addTask","AddTaskFormContainer","onCloseModal","dispatch","isFormValid","setIsFormValid","formInput","setFormInput","status","task","dueDate","onInputChange","e","id","target","newValue","value","prev","isInputValid","length","checkFormValidation","obj","isValid","Object","values","map","every","onAddTask","onFormSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,6BAAxB;;;AAEA,SAASC,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAAgD;AAAA;;AAC9C,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC;AACzCY,IAAAA,MAAM,EAAE,SADiC;AAEzCC,IAAAA,IAAI,EAAE,EAFmC;AAGzCC,IAAAA,OAAO,EAAE;AAHgC,GAAD,CAA1C;;AAMA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AAC3B,UAAMC,EAAE,GAAGD,CAAC,CAACE,MAAF,CAASD,EAApB;AACA,UAAME,QAAQ,GAAGH,CAAC,CAACE,MAAF,CAASE,KAA1B;AACAT,IAAAA,YAAY,CAAEU,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAW,OAACJ,EAAD,GAAME;AAAjB,KAAX,CAAD,CAAZ;AACD,GAJD;;AAMA,QAAMG,YAAY,GAAIF,KAAD,IAAW;AAC9B,WAAOA,KAAK,CAACG,MAAN,IAAgB,CAAhB,GAAoB,IAApB,GAA2BH,KAAK,KAAK,EAAV,GAAe,IAAf,GAAsB,KAAxD;AACD,GAFD;;AAIA,QAAMI,mBAAmB,GAAIC,GAAD,IAAS;AACnC,QAAIC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcH,GAAd,EACXI,GADW,CACNT,KAAD,IAAWE,YAAY,CAACF,KAAD,CADhB,EAEXU,KAFW,CAEJJ,OAAD,IAAaA,OAFR,CAAd;AAGAjB,IAAAA,cAAc,CAACiB,OAAD,CAAd;AACD,GALD;;AAOA,QAAMK,SAAS,GAAIN,GAAD,IAAS;AACzBlB,IAAAA,QAAQ,CAACH,OAAO,CAACqB,GAAD,CAAR,CAAR;AACD,GAFD;;AAIA,QAAMO,YAAY,GAAIhB,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACiB,cAAF;;AACA,QAAIzB,WAAJ,EAAiB;AACfuB,MAAAA,SAAS,CAACrB,SAAD,CAAT;AACAJ,MAAAA,YAAY;AACb;AACF,GAND;;AAQAL,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,mBAAmB,CAACd,SAAD,CAAnB;AACD,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAIA,sBAAO,QAAC,WAAD;AAAa,IAAA,YAAY,EAAEJ,YAA3B;AAAyC,IAAA,aAAa,EAAEyB;AAAxD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA7CQ1B,oB;UACUH,W;;;KADVG,oB;AA+CT,eAAeA,oBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport AddTaskForm from \"./AddTaskForm\";\nimport { addTask } from \"../../redux/actions/queries\";\n\nfunction AddTaskFormContainer({ onCloseModal }) {\n  const dispatch = useDispatch();\n\n  const [isFormValid, setIsFormValid] = useState(false);\n\n  const [formInput, setFormInput] = useState({\n    status: \"pending\",\n    task: \"\",\n    dueDate: \"\",\n  });\n\n  const onInputChange = (e) => {\n    const id = e.target.id;\n    const newValue = e.target.value;\n    setFormInput((prev) => ({ ...prev, [id]: newValue }));\n  };\n\n  const isInputValid = (value) => {\n    return value.length >= 3 ? true : value === \"\" ? null : false;\n  };\n\n  const checkFormValidation = (obj) => {\n    let isValid = Object.values(obj)\n      .map((value) => isInputValid(value))\n      .every((isValid) => isValid);\n    setIsFormValid(isValid);\n  };\n\n  const onAddTask = (obj) => {\n    dispatch(addTask(obj));\n  };\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    if (isFormValid) {\n      onAddTask(formInput);\n      onCloseModal();\n    }\n  };\n\n  useEffect(() => {\n    checkFormValidation(formInput);\n  }, [formInput]);\n\n  return <AddTaskForm onCloseModal={onCloseModal} handleAddTask={onAddTask} />;\n}\n\nexport default AddTaskFormContainer;\n"]},"metadata":{},"sourceType":"module"}