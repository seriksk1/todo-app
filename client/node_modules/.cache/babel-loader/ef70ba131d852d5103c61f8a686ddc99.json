{"ast":null,"code":"var _jsxFileName = \"/home/developer/Public/Projects/todo-app/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./App.css\";\nimport { Grid, Button, Typography } from \"@material-ui/core\";\nimport { SortPopupContainer, TaskListContainer, ModalContainer } from \"./components\";\nimport { fetchTasks, addTask, removeTask, setTaskStatus, setSortType } from \"./redux/actions/tasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  mainContainer: {\n    marginTop: 20\n  },\n  addTaskBtn: {\n    width: 150\n  }\n});\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const sortTypes = [{\n    id: 1,\n    type: \"Due-date\"\n  }, {\n    id: 2,\n    type: \"Status\"\n  }];\n  const {\n    items,\n    sortType\n  } = useSelector(({\n    tasks\n  }) => tasks);\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleOpenModal = () => {\n    setOpenModal(true);\n  };\n\n  const onCloseModal = () => {\n    setOpenModal(false);\n  };\n\n  const onAddTask = obj => {\n    dispatch(addTask(obj));\n  };\n\n  const onSelectType = id => {\n    dispatch(setSortType(id));\n  };\n\n  useEffect(() => {\n    dispatch(fetchTasks(sortType));\n  }, [sortType]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.mainContainer,\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: classes.addTaskBtn,\n      onClick: handleOpenModal,\n      size: \"large\",\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SortPopupContainer, {\n      sortType: sortType,\n      items: sortTypes,\n      onSelectType: onSelectType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), items.length ? /*#__PURE__*/_jsxDEV(TaskListContainer, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.modalTitle,\n      children: \"You don't have any tasks yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ModalContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lPCo2LtjiUI0Rci5ZoOzV5Po9+A=\", false, function () {\n  return [useDispatch, useStyles, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/developer/Public/Projects/todo-app/client/src/App.js"],"names":["useSelector","useDispatch","useEffect","useState","makeStyles","Grid","Button","Typography","SortPopupContainer","TaskListContainer","ModalContainer","fetchTasks","addTask","removeTask","setTaskStatus","setSortType","useStyles","mainContainer","marginTop","addTaskBtn","width","App","dispatch","classes","sortTypes","id","type","items","sortType","tasks","openModal","setOpenModal","handleOpenModal","onCloseModal","onAddTask","obj","onSelectType","length","modalTitle"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport \"./App.css\";\n\nimport { Grid, Button, Typography } from \"@material-ui/core\";\nimport {\n  SortPopupContainer,\n  TaskListContainer,\n  ModalContainer,\n} from \"./components\";\n\nimport {\n  fetchTasks,\n  addTask,\n  removeTask,\n  setTaskStatus,\n  setSortType,\n} from \"./redux/actions/tasks\";\n\nconst useStyles = makeStyles({\n  mainContainer: {\n    marginTop: 20,\n  },\n  addTaskBtn: {\n    width: 150,\n  },\n});\n\nfunction App() {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const sortTypes = [\n    { id: 1, type: \"Due-date\" },\n    { id: 2, type: \"Status\" },\n  ];\n\n  const { items, sortType } = useSelector(({ tasks }) => tasks);\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleOpenModal = () => {\n    setOpenModal(true);\n  };\n\n  const onCloseModal = () => {\n    setOpenModal(false);\n  };\n\n  const onAddTask = (obj) => {\n    dispatch(addTask(obj));\n  };\n\n  const onSelectType = (id) => {\n    dispatch(setSortType(id));\n  };\n\n  useEffect(() => {\n    dispatch(fetchTasks(sortType));\n  }, [sortType]);\n\n  return (\n    <Grid\n      className={classes.mainContainer}\n      container\n      direction=\"column\"\n      alignItems=\"center\"\n    >\n      <Button\n        className={classes.addTaskBtn}\n        onClick={handleOpenModal}\n        size=\"large\"\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Add Task\n      </Button>\n\n      <SortPopupContainer\n        sortType={sortType}\n        items={sortTypes}\n        onSelectType={onSelectType}\n      />\n      {items.length ? (\n        <TaskListContainer items={items} />\n      ) : (\n        <Typography className={classes.modalTitle}>\n          You don't have any tasks yet\n        </Typography>\n      )}\n\n      <ModalContainer />\n    </Grid>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}