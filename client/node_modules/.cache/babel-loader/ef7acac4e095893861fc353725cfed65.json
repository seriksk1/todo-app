{"ast":null,"code":"var _jsxFileName = \"/home/developer/Public/Projects/todo-app/client/src/components/AddTaskForm/AddTaskForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  form: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  textField: {\n    width: \"80%\",\n    marginBottom: 30\n  },\n  addTaskBtn: {\n    width: 150\n  }\n});\n\nfunction AddTaskForm({\n  onCloseModal,\n  handleAddTask,\n  onFormSubmit,\n  onInputChange\n}) {\n  _s();\n\n  const classes = useStyles();\n\n  const handleFormSubmit = e => {\n    onFormSubmit(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: handleFormSubmit,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"task\",\n      error: isInputValid(formInput.task) === false ? true : null,\n      className: classes.textField,\n      onChange: handleInput,\n      label: \"Task\",\n      variant: \"outlined\",\n      helperText: isInputValid(formInput.task) ? null : \"At least 3 symbols\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"dueDate\",\n      error: isInputValid(formInput.dueDate) === false ? true : null,\n      className: classes.textField,\n      onChange: handleInput,\n      type: \"date\",\n      label: \"Due-date\",\n      InputLabelProps: {\n        shrink: true\n      },\n      helperText: isInputValid(formInput.dueDate) ? null : \"Choose date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.addTaskBtn,\n      type: \"submit\",\n      size: \"large\",\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"OK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTaskForm, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddTaskForm;\nexport default AddTaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTaskForm\");","map":{"version":3,"sources":["/home/developer/Public/Projects/todo-app/client/src/components/AddTaskForm/AddTaskForm.jsx"],"names":["useEffect","useState","makeStyles","TextField","Button","useStyles","form","width","display","flexDirection","alignItems","textField","marginBottom","addTaskBtn","AddTaskForm","onCloseModal","handleAddTask","onFormSubmit","onInputChange","classes","handleFormSubmit","e","isInputValid","formInput","task","handleInput","dueDate","shrink"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,mBAAlC;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC;AAC3BI,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,aAAa,EAAE,QAHX;AAIJC,IAAAA,UAAU,EAAE;AAJR,GADqB;AAO3BC,EAAAA,SAAS,EAAE;AACTJ,IAAAA,KAAK,EAAE,KADE;AAETK,IAAAA,YAAY,EAAE;AAFL,GAPgB;AAW3BC,EAAAA,UAAU,EAAE;AACVN,IAAAA,KAAK,EAAE;AADG;AAXe,CAAD,CAA5B;;AAgBA,SAASO,WAAT,CAAqB;AACnBC,EAAAA,YADmB;AAEnBC,EAAAA,aAFmB;AAGnBC,EAAAA,YAHmB;AAInBC,EAAAA;AAJmB,CAArB,EAKG;AAAA;;AACD,QAAMC,OAAO,GAAGd,SAAS,EAAzB;;AAEA,QAAMe,gBAAgB,GAAIC,CAAD,IAAO;AAC9BJ,IAAAA,YAAY,CAACI,CAAD,CAAZ;AACD,GAFD;;AAIA,sBACE;AACE,IAAA,SAAS,EAAEF,OAAO,CAACb,IADrB;AAEE,IAAA,QAAQ,EAAEc,gBAFZ;AAGE,IAAA,UAAU,MAHZ;AAIE,IAAA,YAAY,EAAC,KAJf;AAAA,4BAME,QAAC,SAAD;AACE,MAAA,EAAE,EAAC,MADL;AAEE,MAAA,KAAK,EAAEE,YAAY,CAACC,SAAS,CAACC,IAAX,CAAZ,KAAiC,KAAjC,GAAyC,IAAzC,GAAgD,IAFzD;AAGE,MAAA,SAAS,EAAEL,OAAO,CAACR,SAHrB;AAIE,MAAA,QAAQ,EAAEc,WAJZ;AAKE,MAAA,KAAK,EAAC,MALR;AAME,MAAA,OAAO,EAAC,UANV;AAOE,MAAA,UAAU,EAAEH,YAAY,CAACC,SAAS,CAACC,IAAX,CAAZ,GAA+B,IAA/B,GAAsC,oBAPpD;AAQE,MAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,YANF,eAiBE,QAAC,SAAD;AACE,MAAA,EAAE,EAAC,SADL;AAEE,MAAA,KAAK,EAAEF,YAAY,CAACC,SAAS,CAACG,OAAX,CAAZ,KAAoC,KAApC,GAA4C,IAA5C,GAAmD,IAF5D;AAGE,MAAA,SAAS,EAAEP,OAAO,CAACR,SAHrB;AAIE,MAAA,QAAQ,EAAEc,WAJZ;AAKE,MAAA,IAAI,EAAC,MALP;AAME,MAAA,KAAK,EAAC,UANR;AAOE,MAAA,eAAe,EAAE;AACfE,QAAAA,MAAM,EAAE;AADO,OAPnB;AAUE,MAAA,UAAU,EAAEL,YAAY,CAACC,SAAS,CAACG,OAAX,CAAZ,GAAkC,IAAlC,GAAyC;AAVvD;AAAA;AAAA;AAAA;AAAA,YAjBF,eA6BE,QAAC,MAAD;AACE,MAAA,SAAS,EAAEP,OAAO,CAACN,UADrB;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,OAAO,EAAC,WAJV;AAKE,MAAA,KAAK,EAAC,SALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GArDQC,W;UAMST,S;;;KANTS,W;AAuDT,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nimport { TextField, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  form: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  textField: {\n    width: \"80%\",\n    marginBottom: 30,\n  },\n  addTaskBtn: {\n    width: 150,\n  },\n});\n\nfunction AddTaskForm({\n  onCloseModal,\n  handleAddTask,\n  onFormSubmit,\n  onInputChange,\n}) {\n  const classes = useStyles();\n\n  const handleFormSubmit = (e) => {\n    onFormSubmit(e);\n  };\n\n  return (\n    <form\n      className={classes.form}\n      onSubmit={handleFormSubmit}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField\n        id=\"task\"\n        error={isInputValid(formInput.task) === false ? true : null}\n        className={classes.textField}\n        onChange={handleInput}\n        label=\"Task\"\n        variant=\"outlined\"\n        helperText={isInputValid(formInput.task) ? null : \"At least 3 symbols\"}\n        required\n      />\n\n      <TextField\n        id=\"dueDate\"\n        error={isInputValid(formInput.dueDate) === false ? true : null}\n        className={classes.textField}\n        onChange={handleInput}\n        type=\"date\"\n        label=\"Due-date\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        helperText={isInputValid(formInput.dueDate) ? null : \"Choose date\"}\n      />\n      <Button\n        className={classes.addTaskBtn}\n        type=\"submit\"\n        size=\"large\"\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        OK\n      </Button>\n    </form>\n  );\n}\n\nexport default AddTaskForm;\n"]},"metadata":{},"sourceType":"module"}