{"ast":null,"code":"var _jsxFileName = \"/home/developer/Public/Projects/todo-app/client/src/components/custom/SortPopup.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Menu, MenuItem, Button } from \"../material-ui\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  sortPopup: {\n    margin: \"20px 0\"\n  },\n  paper: {\n    border: \"1px solid #000\"\n  },\n  menuItem: {\n    \"&:focus\": {\n      backgroundColor: \"#d4d7ff\"\n    }\n  }\n});\n\nfunction SortPopup({\n  sortType,\n  items,\n  onSelectType\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleOpenPopup = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMenuItemClick = type => {\n    onSelectType(type);\n    handleMenuClose();\n  };\n\n  useEffect(() => {\n    console.log(\"sortType changed!\");\n  }, [sortType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.sortPopup,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      \"aria-controls\": \"sort-menu\",\n      \"aria-haspopup\": \"true\",\n      onClick: handleOpenPopup,\n      children: \"Sort by...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"sort-menu\",\n      className: classes.paper,\n      getContentAnchorEl: null,\n      anchorEl: anchorEl,\n      keepMounted: true,\n      open: Boolean(anchorEl),\n      onClose: handleMenuClose,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      children: items && items.map(({\n        id,\n        type\n      }) => {\n        return /*#__PURE__*/_jsxDEV(MenuItem, {\n          className: classes.menuItem,\n          onClick: () => handleMenuItemClick(type),\n          selected: sortType === type,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)\n        }, `${type}_`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SortPopup, \"FrnOhDDUQkCdr+cMdV+QV1Pg8Q0=\", false, function () {\n  return [useStyles];\n});\n\n_c = SortPopup;\nexport default SortPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortPopup\");","map":{"version":3,"sources":["/home/developer/Public/Projects/todo-app/client/src/components/custom/SortPopup.jsx"],"names":["useEffect","useState","makeStyles","Menu","MenuItem","Button","useStyles","sortPopup","margin","paper","border","menuItem","backgroundColor","SortPopup","sortType","items","onSelectType","classes","anchorEl","setAnchorEl","handleOpenPopup","event","currentTarget","handleMenuClose","handleMenuItemClick","type","console","log","Boolean","vertical","horizontal","map","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,QAAuC,gBAAvC;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAC;AAC3BK,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AADC,GADgB;AAI3BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AADH,GAJoB;AAO3BC,EAAAA,QAAQ,EAAE;AACR,eAAW;AACTC,MAAAA,eAAe,EAAE;AADR;AADH;AAPiB,CAAD,CAA5B;;AAcA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAnB,EAAsD;AAAA;;AACpD,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMmB,eAAe,GAAIC,KAAD,IAAW;AACjCF,IAAAA,WAAW,CAACE,KAAK,CAACC,aAAP,CAAX;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC5BJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,QAAMK,mBAAmB,GAAIC,IAAD,IAAU;AACpCT,IAAAA,YAAY,CAACS,IAAD,CAAZ;AACAF,IAAAA,eAAe;AAChB,GAHD;;AAKAvB,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,GAFQ,EAEN,CAACb,QAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEG,OAAO,CAACV,SAAxB;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,WAFR;AAGE,uBAAc,WAHhB;AAIE,uBAAc,MAJhB;AAKE,MAAA,OAAO,EAAEa,eALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,IAAD;AACE,MAAA,EAAE,EAAC,WADL;AAEE,MAAA,SAAS,EAAEH,OAAO,CAACR,KAFrB;AAGE,MAAA,kBAAkB,EAAE,IAHtB;AAIE,MAAA,QAAQ,EAAES,QAJZ;AAKE,MAAA,WAAW,MALb;AAME,MAAA,IAAI,EAAEU,OAAO,CAACV,QAAD,CANf;AAOE,MAAA,OAAO,EAAEK,eAPX;AAQE,MAAA,YAAY,EAAE;AACZM,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OARhB;AAYE,MAAA,eAAe,EAAE;AACfD,QAAAA,QAAQ,EAAE,KADK;AAEfC,QAAAA,UAAU,EAAE;AAFG,OAZnB;AAAA,gBAiBGf,KAAK,IACJA,KAAK,CAACgB,GAAN,CAAU,CAAC;AAAEC,QAAAA,EAAF;AAAMP,QAAAA;AAAN,OAAD,KAAkB;AAC1B,4BACE,QAAC,QAAD;AAEE,UAAA,SAAS,EAAER,OAAO,CAACN,QAFrB;AAGE,UAAA,OAAO,EAAE,MAAMa,mBAAmB,CAACC,IAAD,CAHpC;AAIE,UAAA,QAAQ,EAAEX,QAAQ,KAAKW,IAJzB;AAAA,iCAME,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA;AANF,WACQ,GAAEA,IAAK,GADf;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAXD;AAlBJ;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;GAjEQZ,S;UACSP,S;;;KADTO,S;AAmET,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Menu, MenuItem, Button } from \"../material-ui\";\n\nconst useStyles = makeStyles({\n  sortPopup: {\n    margin: \"20px 0\",\n  },\n  paper: {\n    border: \"1px solid #000\",\n  },\n  menuItem: {\n    \"&:focus\": {\n      backgroundColor: \"#d4d7ff\",\n    },\n  },\n});\n\nfunction SortPopup({ sortType, items, onSelectType }) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleOpenPopup = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMenuItemClick = (type) => {\n    onSelectType(type);\n    handleMenuClose();\n  };\n\n  useEffect(() => {\n    console.log(\"sortType changed!\");\n  }, [sortType]);\n\n  return (\n    <div className={classes.sortPopup}>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        aria-controls=\"sort-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleOpenPopup}\n      >\n        Sort by...\n      </Button>\n      <Menu\n        id=\"sort-menu\"\n        className={classes.paper}\n        getContentAnchorEl={null}\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        {items &&\n          items.map(({ id, type }) => {\n            return (\n              <MenuItem\n                key={`${type}_`}\n                className={classes.menuItem}\n                onClick={() => handleMenuItemClick(type)}\n                selected={sortType === type}\n              >\n                <ListItemText primary={type} />\n              </MenuItem>\n            );\n          })}\n      </Menu>\n    </div>\n  );\n}\n\nexport default SortPopup;\n"]},"metadata":{},"sourceType":"module"}